# Первая строка содержит количество предметов 1≤n≤103 и вместимость рюкзака 0≤W≤2⋅106.
# Каждая из следующих n строк задаёт стоимость 0≤ci≤2⋅106 и объём 0<wi≤2⋅106 предмета
# (n, W, ci, wi — целые числа).
# Выведите максимальную стоимость частей предметов (от каждого предмета можно отделить любую часть,
# стоимость и объём при этом пропорционально уменьшатся), помещающихся в данный рюкзак,
# с точностью не менее трёх знаков после запятой.
#
# Sample Input:
#
# 3 50
# 60 20
# 100 50
# 120 30
# Sample Output:
#
# 180.000

n, w = [int(i) for i in input().split()]
items = []
# Заполняем список предметами: [стоимость, объём, удельная стоимтость]
for i in range(n):
    items.append([float(i) for i in input().split()])
    items[i].append(items[i][0]/items[i][1])

# Отсортируем элементы по удельной стоимости в порядке убывания
items = sorted(items, key=lambda item: item[2], reverse=True)

max_cost_in = 0
free_space  = float(w)

# Перебираем все предметы от самого дорого
for i in range(n):
    # Если предмет помещается со остатком,
    # то отнимаем соответствуюшее свободное место и прибавляем его стоимость
    if free_space > items[i][1]:
        free_space -= items[i][1]
        max_cost_in += items[i][0]
    # в противном случае прибавляем произведение оставшего места на удельную стоимость его и
    # и прекращаем цикл
    else:
        max_cost_in += free_space*items[i][2]
        break

# 3и знака после запятой
print("{:.3f}".format(max_cost_in))
